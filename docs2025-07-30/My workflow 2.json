{"createdAt":"2025-07-30T11:08:52.831Z","updatedAt":"2025-07-30T11:08:52.831Z","id":"7Q2HWmQ7q6c8rCKP","name":"My workflow 2","active":false,"isArchived":false,"nodes":[{"parameters":{"operation":"getAll","limit":60,"simple":false,"filters":{"q":"subject:RappiCard - Resumen de transacci√≥n"},"options":{}},"type":"n8n-nodes-base.gmail","typeVersion":2.1,"position":[540,120],"id":"ec48cafd-9640-4f87-82fd-016278ab11fe","name":"Gmail","webhookId":"a535f64f-3faf-4258-97c0-8966eb017229"},{"parameters":{"mode":"runOnceForEachItem","jsCode":"const html = $json.text;\n\nlet tipo = null;\nlet tipoMovimiento = null;\nlet monto = null;\nlet fecha = null;\nlet hora = null;\nlet cuentaDestinoOComercio = null;\nlet origenPago = null;\n\n// üü† CASO √öNICO: Compra con RappiCard\nif (/Realizaste una compra con tu RappiCard/i.test(html)) {\n  tipo = \"pago\";\n  tipoMovimiento = \"expense\";\n\n  // Extraer monto: $43.500\n  const montoMatch = html.match(/Monto\\s+\\$([\\d,.]+)/i);\n  monto = montoMatch ? parseFloat(montoMatch[1].replace(/\\./g, \"\").replace(\",\", \"\")) : null;\n\n  // Extraer comercio: BOLD Comidasrapidas\n const comercioMatch = html.match(/Comercio\\s+([\\s\\S]+?)\\n\\n-+/i);\n  cuentaDestinoOComercio = comercioMatch ? comercioMatch[1].trim() : null;\n\n  // Extraer fecha y hora: 2025-06-07 23:03:03\n  const fechaHoraMatch = html.match(/Fecha de la transacci√≥n\\s+(\\d{4}-\\d{2}-\\d{2})\\s+(\\d{2}:\\d{2}):\\d{2}/i);\n  if (fechaHoraMatch) {\n    fecha = fechaHoraMatch[1];\n    hora = fechaHoraMatch[2];\n  }\n\n  // Medio de pago fijo\n  origenPago = \"83226dc2-bb50-4f11-b206-8d327b1c05a4\";\n}\n\nreturn {\n  tipo,\n  tipoMovimiento,\n  monto,\n  fecha,\n  hora,\n  cuentaDestinoOComercio,\n  origenPago\n};\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[700,0],"id":"1b298bd0-5f20-40f1-8b3d-59fc40849cfa","name":"Code"},{"parameters":{"operation":"getAll","limit":62,"simple":false,"filters":{"q":"subject:Alertas y Notificaciones"},"options":{}},"type":"n8n-nodes-base.gmail","typeVersion":2.1,"position":[520,500],"id":"481a21f1-c73f-4ecd-87cb-1a2f4bbe804a","name":"Gmail1","webhookId":"a535f64f-3faf-4258-97c0-8966eb017229"},{"parameters":{"content":"**Flujo de Bancolomba**\n","height":360,"width":620},"type":"n8n-nodes-base.stickyNote","position":[260,300],"typeVersion":1,"id":"92de8db0-93ff-4224-995b-a4128d500da4","name":"Sticky Note1"},{"parameters":{"mode":"runOnceForEachItem","jsCode":"const html = $json[\"html\"];\n\nfunction formatFecha(fechaOriginal) {\n  if (!fechaOriginal) return null;\n  const [dia, mes, anio] = fechaOriginal.split('/');\n  return `${anio}-${mes}-${dia}`;\n}\n\nlet tipo = null;\nlet tipoMovimiento = null;\nlet monto = null;\nlet fecha = null;\nlet hora = null;\nlet cuentaDestinoOComercio = null;\nlet origenPago = null;\n\n// üü¢ CASO 1: Ingreso\nif (/Recibiste\\s+(un pago|una transferencia)/i.test(html)) {\n  tipo = \"income\";\n  tipoMovimiento = \"income\";\n\n  const montoMatch = html.match(/por\\s+\\$([\\d,]+)/i);\n  monto = montoMatch ? parseFloat(montoMatch[1].replace(/,/g, \"\")) : null;\n\n  const origenMatch = html.match(/de\\s+(.+?)\\s+en tu cuenta/i);\n  cuentaDestinoOComercio = origenMatch ? origenMatch[1].trim() : null;\n\n  const fechaHoraMatch = html.match(/el\\s+(\\d{2}\\/\\d{2}\\/\\d{4})\\s+a las\\s+(\\d{2}:\\d{2})/i);\n  if (fechaHoraMatch) {\n    fecha = formatFecha(fechaHoraMatch[1]);\n    hora = fechaHoraMatch[2];\n  }\n\n  origenPago = \"c7c39949-17ee-4fde-9190-241d7495dfe0\";\n\n// üü° CASO 2: Transferencia por QR\n} else if (/Transferiste\\s+\\$[\\d,.]+\\s+por QR/i.test(html)) {\n  tipo = \"Transferencia QR\";\n  tipoMovimiento = \"expense\";\n\n  const montoMatch = html.match(/Transferiste\\s+\\$([\\d,]+)/i);\n  monto = montoMatch ? parseFloat(montoMatch[1].replace(/,/g, \"\")) : null;\n\n  const comercioMatch = html.match(/a la cuenta\\s+(.+?),\\s+el/i);\n  cuentaDestinoOComercio = comercioMatch ? comercioMatch[1].trim() : null;\n\n  const fechaHoraMatch = html.match(/el\\s+(\\d{4}\\/\\d{2}\\/\\d{2})\\s+(\\d{2}:\\d{2})/);\n  if (fechaHoraMatch) {\n    fecha = fechaHoraMatch[1].replace(/\\//g, \"-\"); // cambia YYYY/MM/DD ‚Üí YYYY-MM-DD\n    hora = fechaHoraMatch[2];\n  }\n\n  origenPago = \"c7c39949-17ee-4fde-9190-241d7495dfe0\";\n\n// üü° CASO 3: Transferencia normal\n} else if (/Transferiste\\s+\\$/.test(html)) {\n  tipo = \"transferencia\";\n  tipoMovimiento = \"expense\";\n\n  const montoMatch = html.match(/Transferiste\\s+\\$([\\d,]+)/);\n  monto = montoMatch ? parseFloat(montoMatch[1].replace(/,/g, \"\")) : null;\n\n  const cuentaMatch = html.match(/a la cuenta\\s+\\*(\\d+)/);\n  cuentaDestinoOComercio = cuentaMatch ? cuentaMatch[1] : null;\n\n  const fechaMatch = html.match(/el\\s+(\\d{2}\\/\\d{2}\\/\\d{4})/);\n  fecha = fechaMatch ? formatFecha(fechaMatch[1]) : null;\n\n  const horaMatch = html.match(/a las\\s+(\\d{2}:\\d{2})/);\n  hora = horaMatch ? horaMatch[1] : null;\n\n  origenPago = \"c7c39949-17ee-4fde-9190-241d7495dfe0\";\n\n// üü£ CASO 7: Pago a tarjeta propia desde cuenta\n} else if (/Pagaste\\s+\\$[\\d,.]+\\s+en la tarjeta de credito\\s+\\*\\d{4}\\s+desde la cuenta\\s+\\*\\d{4}/i.test(html)) {\n  tipo = \"Pago tarjeta propia\";\n  tipoMovimiento = \"expense\";\n\n  const montoMatch = html.match(/Pagaste\\s+\\$([\\d,.]+)/i);\n  monto = montoMatch ? parseFloat(montoMatch[1].replace(/,/g, \"\").split(\".\")[0]) : null;\n\n  const tarjetaMatch = html.match(/en la tarjeta de credito\\s+\\*(\\d{4})/i);\n\n  cuentaDestinoOComercio = tarjetaMatch ? `Tarjeta *${tarjetaMatch[1]}` : null;\n  origenPago = 'c7c39949-17ee-4fde-9190-241d7495dfe0';\n\n  const fechaHoraMatch = html.match(/el\\s+(\\d{2})\\/(\\d{2})\\/(\\d{4})\\s+(\\d{2}:\\d{2})/);\n  if (fechaHoraMatch) {\n    fecha = `${fechaHoraMatch[3]}-${fechaHoraMatch[2]}-${fechaHoraMatch[1]}`;\n    hora = fechaHoraMatch[4];\n  }\n\n\n// üü° CASO 4: Pago gen√©rico\n} else if (/Pagaste\\s+\\$/.test(html)) {\n  tipo = \"pago\";\n  tipoMovimiento = \"expense\";\n\n  const montoMatch = html.match(/Pagaste\\s+\\$([\\d,]+)/);\n  monto = montoMatch ? parseFloat(montoMatch[1].replace(/,/g, \"\")) : null;\n\n  const comercioMatch = html.match(/a\\s+([A-Z√Å√â√ç√ì√ö√ë0-9\\s\\.\\-&]+?)\\s+desde tu/i);\n  cuentaDestinoOComercio = comercioMatch ? comercioMatch[1].trim() : null;\n\n  const fechaHoraMatch = html.match(/el\\s+(\\d{2}\\/\\d{2}\\/\\d{4})\\s+(\\d{2}:\\d{2}:\\d{2})/);\n  if (fechaHoraMatch) {\n    fecha = formatFecha(fechaHoraMatch[1]);\n    hora = fechaHoraMatch[2];\n  }\n\n  origenPago = /desde tu tarjeta/i.test(html)\n    ? \"Tarjeta Bancolombia\"\n    : \"c7c39949-17ee-4fde-9190-241d7495dfe0\";\n\n// üü° CASO 5: Compra con tarjeta\n} else if (/Compraste\\s+COP([\\d,.]+)/.test(html)) {\n  tipo = \"pago\";\n  tipoMovimiento = \"expense\";\n\n  const montoMatch = html.match(/Compraste\\s+COP([\\d,.]+)/);\n  monto = montoMatch ? parseFloat(montoMatch[1].replace(/\\./g, \"\").replace(\",\", \".\")) : null;\n\n  const comercioMatch = html.match(/en\\s+([A-Z√Å√â√ç√ì√ö√ë0-9\\s\\.\\-&]+?)\\s+con tu/i);\n  cuentaDestinoOComercio = comercioMatch ? comercioMatch[1].trim() : null;\n\n  const fechaHoraMatch = html.match(/el\\s+(\\d{2}\\/\\d{2}\\/\\d{4})\\s+a las\\s+(\\d{2}:\\d{2})/);\n  if (fechaHoraMatch) {\n    fecha = formatFecha(fechaHoraMatch[1]);\n    hora = fechaHoraMatch[2];\n  }\n\n  origenPago = \"11b7cc2a-3679-46fa-833c-1f194961bbca\";\n\n// üü† CASO 6: Transferencia con llave\n} else if (/transferiste\\s+\\$[\\d,.]+\\s+de tu producto\\s+\\*\\d+\\s+a la llave\\s+@/i.test(html)) {\n  tipo = \"Transferencia llave\";\n  tipoMovimiento = \"expense\";\n\n  const montoMatch = html.match(/transferiste\\s+\\$([\\d,.]+)/i);\n  monto = montoMatch ? parseFloat(montoMatch[1].replace(/,/g, \"\").split(\".\")[0]) : null;\n\n  const llaveMatch = html.match(/a la llave\\s+(@[^\\s]+)/i);\n  cuentaDestinoOComercio = llaveMatch ? llaveMatch[1] : null;\n\n  const fechaHoraMatch = html.match(/el\\s+(\\d{2})\\/(\\d{2})\\/(\\d{2})\\s+a las\\s+(\\d{2}:\\d{2})/i);\n  if (fechaHoraMatch) {\n    const [ , dia, mes, anio2d ] = fechaHoraMatch;\n    const anio = `20${anio2d}`; // convierte 25 en 2025\n    fecha = `${anio}-${mes}-${dia}`;\n    hora = fechaHoraMatch[4];\n  }\n\n  origenPago = \"c7c39949-17ee-4fde-9190-241d7495dfe0\";\n}\n\n// Salida final del nodo\nreturn {\n  tipo,\n  tipoMovimiento,\n  monto,\n  fecha,\n  hora,\n  cuentaDestinoOComercio,\n  origenPago\n};\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[700,360],"id":"4f6e8b4e-c84a-44c6-87ef-d0925a1f9eff","name":"Code1"},{"parameters":{"tableId":"transactions","fieldsUi":{"fieldValues":[{"fieldId":"amount","fieldValue":"={{ $json.monto }}"},{"fieldId":"transaction_date","fieldValue":"={{ $json.fecha }}"},{"fieldId":"description","fieldValue":"={{ $json.cuentaDestinoOComercio }}"},{"fieldId":"user_id","fieldValue":"a44f601e-28b2-408b-abbb-32d09fb15e69"},{"fieldId":"account_id","fieldValue":"={{ $json.origenPago }}"},{"fieldId":"transaction_type","fieldValue":"={{ $json.tipoMovimiento }}"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[1020,120],"id":"68cf66b3-cc5b-4520-92a2-51bd05bb873a","name":"Supabase","alwaysOutputData":false,"executeOnce":false},{"parameters":{"text":"={{ $json.text }}","attributes":{"attributes":[{"name":"comercio","description":"Nombre del comercio donde se hizo la compra o pago."},{"name":"valor","type":"number","description":"alor en pesos colombianos de la transacci√≥n, sin el s√≠mbolo $. Ejemplo: 57000"},{"name":"fecha","type":"date","description":"Fecha en que se realiz√≥ la transacci√≥n, en formato YYYY-MM-DD."},{"name":"medio_pago","description":"Indica el medio de pago utilizado. Debe devolver uno de los siguientes valores exactos: 'Tarjeta Cr√©dito Bancolombia', 'Tarjeta Cr√©dito Rappi', 'Cuenta Ahorros Bancolombia'"},{"name":"tipo_movimiento","description":"Indica si se trata de un 'Ingreso' o una 'Salida'. Si el texto describe una compra, pago, retiro o d√©bito, devuelve 'Salida'. Si describe un abono, consignaci√≥n o transferencia recibida, devuelve 'Ingreso'"}]},"options":{}},"type":"@n8n/n8n-nodes-langchain.informationExtractor","typeVersion":1.1,"position":[-180,140],"id":"8c0788a2-4b2d-47a4-b329-a99e1d7ea3af","name":"Information Extractor"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatDeepSeek","typeVersion":1,"position":[-180,340],"id":"1f1e8638-f8c4-475a-9054-67b4cd6ffb87","name":"DeepSeek Chat Model"},{"parameters":{"pollTimes":{"item":[{"mode":"everyMinute"}]},"simple":false,"filters":{"q":"subject:Alertas y Notificaciones"},"options":{}},"type":"n8n-nodes-base.gmailTrigger","typeVersion":1.2,"position":[300,360],"id":"f004ca07-3e90-48b1-80f3-9e69d5a349c0","name":"Gmail Trigger Bancolombia"},{"parameters":{"pollTimes":{"item":[{"mode":"everyMinute"}]},"simple":false,"filters":{"q":"subject:RappiCard - Resumen de transacci√≥n"},"options":{}},"type":"n8n-nodes-base.gmailTrigger","typeVersion":1.2,"position":[360,0],"id":"a59f4272-b3ce-478d-856a-2e67d8e7055c","name":"Gmail Trigger Rappicard"},{"parameters":{"content":"Guardar SUPABASE","height":240,"width":260},"type":"n8n-nodes-base.stickyNote","position":[960,60],"typeVersion":1,"id":"72a30d1d-c045-49da-b3a8-c646f751e40a","name":"Sticky Note2"},{"parameters":{"content":"Nodo AI","height":420,"width":460},"type":"n8n-nodes-base.stickyNote","position":[-260,60],"typeVersion":1,"id":"898685da-e809-49f2-990b-46fac285655e","name":"Sticky Note3"}],"connections":{"Gmail":{"main":[[{"node":"Code","type":"main","index":0}]]},"Code":{"main":[[{"node":"Supabase","type":"main","index":0}]]},"Gmail1":{"main":[[{"node":"Code1","type":"main","index":0}]]},"Code1":{"main":[[{"node":"Supabase","type":"main","index":0}]]},"DeepSeek Chat Model":{"ai_languageModel":[[{"node":"Information Extractor","type":"ai_languageModel","index":0}]]},"Gmail Trigger Bancolombia":{"main":[[{"node":"Code1","type":"main","index":0}]]},"Gmail Trigger Rappicard":{"main":[[{"node":"Code","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"813c3921-8bf9-4fa2-9765-5b328aa29100","triggerCount":0,"tags":[]}